#+TITLE: Emacs Configuration

This GitHub repository houses my personal Emacs configuration. It serves as a centralized location for me to manage and customize my Emacs setup according to my individual needs and preferences.

Please bear in mind that this configuration is tailored specifically to my own workflow and might not be suitable for everyone. While others are welcome to explore and utilize it as a reference, it is advised to review and modify the configuration to better align with your own requirements and preferences.

Feel free to browse the files and settings within this repository. If you find any areas of interest or have suggestions for improvements, I welcome your feedback. Happy Emacs customization!

* Installation

I use [[https://github.com/doomemacs/doomemacs][Doom Emacs]]. If you're not familiar with it, here are some useful resources:

- [[https://github.com/doomemacs/doomemacs/blob/develop/docs/getting_started.org][Doom Emacs Getting Started Guide]]

Other awesome starter kits:

- [[https://github.com/purcell/emacs.d][Purcell’s .emacs.d]]
- [[https://github.com/bbatsov/prelude][Prelude]]

** Install Dependencies

#+begin_src sh
brew install git ripgrep coreutils fd
xcode-select --install
#+end_src

** Install Fonts

I use [[https://www.jetbrains.com/lp/mono/][JetBrains Mono]] as my default font to ensure consistency across all my editors.

** Install Emacs

I recommened using [[https://github.com/d12frosted/homebrew-emacs-plus#install][emacs-plus]], as it is well-maintained, up-to-date, and stable.

#+begin_src sh
brew tap d12frosted/emacs-plus
brew install emacs-plus --with-native-comp
#+end_src

** Install Doom Emacs

The following commands are soruced from the [[https://github.com/doomemacs/doomemacs#install][Doom Emacs]] README document.
However, it is highly recommened to refer to the original documentation for the most up-to-date information.

#+begin_src sh
git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.config/emacs
~/.config/emacs/bin/doom install
#+end_src

** Install This Configuration

Finally, clone this repo before starting Emacs.

#+begin_src sh
git clone git@github.com:yaodong/doom.git ~/.config/doom
~/.config/emacs/bin/doom sync
#+end_src

** Install Nerd Icons Fonts

If the dashboard icons are broken, install the missing fonts using ~M-x~ and ~nerd-icons-install-fonts~.

* Customizations

Following are detailed explanations about the customizations.

** Restrict Commit Message

To restrict commit messages to my personal contact information, I use [[https://github.com/sds/overcommit][Overcommit]] (Ruby) for checking the committer's email. There are alternatives, such as [[https://pre-commit.com/][pre-commit]] (Python) and [[https://github.com/typicode/husky][Husky]] (JavaScript).

** Keybinding

According to the [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Key-Binding-Conventions.html][Emacs manual]], sequences consisting of ~C-c~ and a letter are reserved for users; they are *only* sequences reserved for users. So I bind frequently used functions with prefix key ~C-c~.

** Switching Themes

I constantly switch between light and dark themes, so I use [[https://github.com/valignatev/heaven-and-hell][heaven-and-hell]] along with the keybinding ~SPC h h~ to toggle between the ~doom-one-light~ and ~doom-nord~ themes.

** Handy Buffers

TBD

** Appearance

TBD

** Programming

*** Python

I enabled the following layers:

#+begin_src elisp
(python +pyenv +lsp +pyright)
#+end_src

The ~+lsp~ module will automatically configure flycheck to use lsp as default checker.

To enable debugger, install

#+begin_src shell
pip install debugpy
#+end_src

*** Rust

Install cargo using [[https://doc.rust-lang.org/cargo/getting-started/installation.html][rustup]]:

#+begin_src shell
curl https://sh.rustup.rs -sSf | sh
#+end_src

Add cargo bin folder to ~$PATH~:

#+begin_src bash
export PATH="$PATH:$HOME/.cargo/bin"
#+end_src

*** Tailwindcss

Install [[https://github.com/avencera/rustywind][rustywind]]:

#+begin_src
cargo install rustywind
#+end_src

** Org-mode

TBD

** Org-roam for Managing Notes

*** Topic-specific Captures

TBD

*** Installation

Install ~graphviz~ if ~org-roam-graph~ raises the following error:

#+begin_example
if: Cannot find executable "dot" to generate the graph.  Please adjust ‘org-roam-graph-executable’
#+end_example

*** References

- [[https://systemcrafters.net/build-a-second-brain-in-emacs/][Build a Second Brain in Emacs]] by System Crafters
